apiVersion: v1
kind: Service
metadata:
  name: pgadmin4-svc # この名前でpodから名前解決できる
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: pgadmin4
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: pgadmin4-dpl
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: pgadmin4
    spec:
      volumes:
      - name: volume-pgadmin4
        persistentVolumeClaim:
          claimName: pvc-pgadmin4
      containers:
      - name: pgadmin4
        image: dpage/pgadmin4:3.1
        resources:
          requests:
            cpu: 0
            memory: 0
        ports:
        - containerPort: 80
        env:
        - name: PGADMIN_DEFAULT_EMAIL
          value: "some@dummy.com"
        - name: PGADMIN_DEFAULT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysecret
              key: pgadmin4_pass
        volumeMounts:
          - mountPath: "/var/lib/pgadmin"
            name: volume-pgadmin4
        # Ingressのバックエンドとして使うためには必須
        readinessProbe:
          httpGet:
            path: /login?next=%2F
            port: 80
          initialDelaySeconds: 15
          timeoutSeconds: 1
---
# pgadmin用PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-pgadmin4
spec:
  storageClassName: ""
  volumeName: pv-pgadmin4
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10G
---
# pgadmin用PV
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-pgadmin4
spec:
  storageClassName: ""
  capacity:
    storage: 10G
  accessModes:
    - ReadWriteOnce
  gcePersistentDisk:
    pdName: disk-for-pgadmin4
    fsType: ext4
